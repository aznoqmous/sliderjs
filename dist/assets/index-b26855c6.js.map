{"version":3,"file":"index-b26855c6.js","sources":["../../src/element.js","../../src/math-utils.js","../../src/slider.js","../../src/script.js"],"sourcesContent":["export default class Element extends EventTarget {\r\n    constructor(container, opts={}) {\r\n        super()\r\n        if(container[this.constructor.name]) return;\r\n        this.container = container\r\n        this.container[this.constructor.name] = this\r\n        this.opts = opts\r\n\r\n        this.build()\r\n        this.bind()\r\n        this.start()\r\n    }\r\n\r\n    build(){}\r\n    bind(){}\r\n    start(){}\r\n\r\n    select(selector){\r\n        return this.container.querySelector(selector)\r\n    }\r\n    selectAll(selector){\r\n        return Array.from(this.container.querySelectorAll(selector))\r\n    }\r\n    create(tagName=\"div\", attributes={}, parent=null){\r\n        const element = document.createElement(tagName)\r\n        for(let key in attributes) element[key] = attributes[key]\r\n        if(parent) parent.append(element)\r\n        return element\r\n    }\r\n    static bind(selector, opts={}){\r\n        document.querySelectorAll(selector).forEach((el)=> new this(el, opts))\r\n    }\r\n}","export default class MathUtils {\r\n    static clamp(v, min=0, max=1){\r\n        return Math.min(max, Math.max(min, v))\r\n    }\r\n    static lerp(a, b, t){\r\n        t = this.clamp(t)\r\n        return (1-t) * a + t * b\r\n    }\r\n    static randomRange(min, max){\r\n        return this.lerp(min, max, Math.random())\r\n    }\r\n}","\r\nimport Element from \"./element\"\r\nimport MathUtils from \"./math-utils\";\r\n\r\nexport default class Slider extends Element {\r\n\r\n    constructor(container, opts={}) {\r\n        super(container, Object.assign({\r\n            itemsContainer: null,\r\n            itemsParent: null,\r\n            items: null,\r\n            transition: \"transform 0.4s cubic-bezier(0.25,1,0.5,1) 0s\",\r\n            mouse: true,\r\n            touch: true,\r\n            clickDragTimeout: 250, // in ms, under this value triggers a click, over this value triggers a drag\r\n            minDragDistance: 30,\r\n\r\n            loop: false,\r\n            autoHeight: false,\r\n            autoPlay: false,\r\n            clamp: false, // first element will stick to container left, last to right\r\n\r\n        }, opts));\r\n        this._loop()\r\n    }\r\n\r\n    build() {\r\n        this.itemsContainer = this.opts.itemsContainer ? this.select(this.opts.itemsContainer) : this.container\r\n        this.itemsParent = this.opts.itemsParent ? this.select(this.opts.itemsParent) : this.itemsContainer.children[0]\r\n        this.items = this.opts.items ? this.selectAll(this.opts.items) : Array.from(this.itemsParent.children)\r\n\r\n        this.touchStartX = null\r\n        this.targetLeft = 0\r\n\r\n        this.autoSwipeMin = 20\r\n        this.autoSwipeMax = window.innerWidth / 3\r\n\r\n        this.itemsContainer.classList.add('slider')\r\n        this.items.map(item => item.classList.add('slider-item'))\r\n\r\n        this.offset = 0\r\n        this.defaultItems = Array.from(this.items)\r\n\r\n        this.update()\r\n        this.offsetX = this.parentRect.left - this.containerRect.left\r\n\r\n        this.initialActiveItem = this.select(\".active\") || this.items[0]\r\n        this.unfloorLeft()\r\n        this.setItem(this.initialActiveItem)\r\n        this.applyLeft()\r\n\r\n        if(this.opts.loop) this.buildLoop()\r\n\r\n        if(this.opts.autoPlay) this.autoPlay()\r\n    }\r\n\r\n    get itemsCount(){\r\n        return this.defaultItems.length\r\n    }\r\n\r\n    get isDrag(){\r\n        return this.touchDistX > this.opts.minDragDistance\r\n    }\r\n\r\n    get touchDistX(){\r\n        return this.lastX ? Math.abs(this.lastX - this.touchStartX) : 0\r\n    }\r\n\r\n    bind() {\r\n        if(this.opts.touch) this.bindTouch()\r\n        if(this.opts.mouse) this.bindMouse()\r\n\r\n        this.lastWindowWidth = window.innerWidth\r\n        window.addEventListener(\"resize\", ()=> {\r\n            if(this.lastWindowWidth != window.innerWidth) this.updateContainerSize()\r\n            this.lastWindowWidth = window.innerWidth\r\n        })\r\n    }\r\n\r\n    bindItems(eventName, callback){\r\n        this.items.map((item) => item.addEventListener(eventName, (e)=> callback(e, this.items.indexOf(item))))\r\n        this.addEventListener(SliderEvents.AddItemEvent, (item)=> {\r\n            item.addEventListener(eventName, (e)=> callback(e, this.items.indexOf(item)))\r\n        })\r\n    }\r\n\r\n    bindMouse(){\r\n        this.bindItems('mousedown', (e, i) => {\r\n            this.moved = false\r\n            this.mouseDownTime = performance.now()\r\n            this.mouseDownItem = this.items[i]\r\n\r\n            this.unfloorLeft()\r\n            window.addEventListener('mousemove', mouseMove)\r\n        })\r\n\r\n        this.bindItems('click', (e)=>{\r\n            if(this.moved) e.preventDefault()\r\n        })\r\n\r\n        const mouseMove = (e) => {\r\n            this.moved = true\r\n\r\n            if(!this.lastX) {\r\n                this.touchStartX = e.clientX\r\n                this.lastX = this.touchStartX\r\n            }\r\n\r\n            this.targetLeft += this.lastX - e.clientX\r\n            this.applyLeft()\r\n            this.lastX = e.clientX\r\n        }\r\n\r\n        this.itemsContainer.addEventListener('mouseup', () => {\r\n            if(!this.lastX && ! this.mouseDownItem) return;\r\n\r\n            if(!this.isDrag)\r\n            {\r\n                this.setItem(this.mouseDownItem)\r\n                this.floorLeft()\r\n            }\r\n            else {\r\n                this.play()\r\n            }\r\n            this.mouseDownItem = null\r\n            this.lastX = null\r\n            window.removeEventListener('mousemove', mouseMove)\r\n        })\r\n\r\n        this.itemsContainer.addEventListener('mouseenter', ()=>{\r\n            this.stopAutoPlay()\r\n        })\r\n\r\n        this.itemsContainer.addEventListener('mouseleave', ()=>{\r\n            if(this.opts.autoPlay) this.autoPlay()\r\n            if(!this.lastX) return;\r\n            this.play()\r\n            this.mouseDownItem = null\r\n            this.lastX = null\r\n            window.removeEventListener('mousemove', mouseMove)\r\n        })\r\n    }\r\n\r\n    _loop(){\r\n        if(!this.mouseDownItem){\r\n            this.currentOffsetX = this.items[0].getBoundingClientRect().left\r\n            if(Math.abs(this.currentOffsetX - this._lastOffsetX) < 1){\r\n                if(!this._loopFloored){\r\n                    this.setNearestTarget()\r\n                    this.floorLeft()\r\n                    this._loopFloored = true\r\n\r\n                    if(this.opts.loop){\r\n                        this.balanceLoop()\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this._loopFloored = false\r\n            }\r\n            this._lastOffsetX = this.currentOffsetX\r\n        }\r\n\r\n        requestAnimationFrame(this._loop.bind(this))\r\n    }\r\n\r\n    balanceLoop(){\r\n        this.unfloorLeft()\r\n        this.setItem(this.activeItem)\r\n        this.applyLeft()\r\n        this.currentOffsetX = this.items[0].getBoundingClientRect().left\r\n        this.update()\r\n\r\n        const center = this.containerRect.left + this.containerRect.width / 2\r\n        const left = center - this.parentRect.left\r\n        const right = this.parentRect.left + this.parentRect.width - center\r\n\r\n        const dist = Math.abs(left - right)\r\n\r\n        if(left < right){\r\n            const lastElement = this.items[this.items.length-1]\r\n            const lastElementWidth = lastElement.getBoundingClientRect().width\r\n            if(lastElementWidth < dist / 2) {\r\n                this.itemsParent.prepend(lastElement)\r\n                this.items = Array.from(this.itemsParent.children)\r\n\r\n                this.balanceLoop()\r\n            }\r\n        }\r\n        else {\r\n            const firstElement = this.items[0]\r\n            const firstElementWidth = firstElement.getBoundingClientRect().width\r\n            if(firstElementWidth < dist / 2) {\r\n                this.itemsParent.append(firstElement)\r\n                this.items = Array.from(this.itemsParent.children)\r\n\r\n                this.balanceLoop()\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    bindTouch(){\r\n        this.bindItems('touchstart', (e) => {\r\n            this.touchStartX = e.touches[0].clientX\r\n            this.lastX = this.touchStartX\r\n            this.unfloorLeft()\r\n        })\r\n        this.itemsContainer.addEventListener('touchmove', (e) => {\r\n            this.targetLeft += this.lastX - e.touches[0].clientX\r\n            this.applyLeft()\r\n            this.lastX = e.touches[0].clientX\r\n        }, {\r\n            passive: false,\r\n        })\r\n        this.itemsContainer.addEventListener('touchend', () => {\r\n            this.play()\r\n        })\r\n    }\r\n\r\n    setIndex(index){\r\n        this._setIndex(index)\r\n        this.floorLeft()\r\n    }\r\n\r\n    prev(){\r\n        this._setIndex(this.activeIndex-1)\r\n        this.floorLeft()\r\n    }\r\n\r\n    next(){\r\n        this._setIndex(this.activeIndex+1)\r\n        this.floorLeft()\r\n    }\r\n\r\n    play(offset = 0) {\r\n        this.offset = offset\r\n        this.containerRect = this.itemsContainer.getBoundingClientRect()\r\n        this.setNearestTarget()\r\n        this.floorLeft()\r\n    }\r\n\r\n    setNearestTarget() {\r\n        if(this.opts.clamp && !this.isDrag) return;\r\n        const centers = this.items.map(item => {\r\n            item.rect = item.getBoundingClientRect()\r\n            return item.rect.left + item.rect.width / 2 - this.containerRect.width / 2 - this.containerRect.left\r\n        })\r\n        const centersSorted = Array.from(centers)\r\n        const nearest = centersSorted.sort((a, b) => Math.abs(a) - Math.abs(b))[0]\r\n        const index = centers.indexOf(nearest)\r\n        this._setIndex(index + this.offset)\r\n    }\r\n\r\n    setItem(item){\r\n        if(this.activeItem === item) return;\r\n        this._setIndex(this.items.indexOf(item))\r\n    }\r\n\r\n    _setIndex(index){\r\n        const oldIndex = this.activeIndex\r\n        this.activeIndex = MathUtils.clamp(index, 0, this.items.length - 1)\r\n        this.activeItem = this.items[this.activeIndex]\r\n        this.activeItem.rect = this.activeItem.getBoundingClientRect()\r\n        this.targetLeft =\r\n            this.activeItem.rect.left\r\n            + this.activeItem.rect.width / 2\r\n            - this.containerRect.width / 2\r\n            - this.containerRect.left\r\n            + this.targetLeft\r\n\r\n        if(this.opts.clamp){\r\n            this.targetLeft = MathUtils.clamp(this.targetLeft, 0, this.parentRect.width - this.containerRect.width + this.offsetX * 2)\r\n        }\r\n        if(this.opts.autoHeight) this.itemsContainer.style.height = this.activeItem.getBoundingClientRect().height + \"px\"\r\n\r\n        if(this.activeIndex !== oldIndex) this.dispatchEvent(new SliderChangeEvent(this.activeItem, this.activeIndex))\r\n    }\r\n\r\n    applyLeft(){\r\n        this.itemsParent.style.transform = `translateX(${-this.targetLeft}px)`\r\n    }\r\n\r\n    unfloorLeft(){\r\n        this.itemsParent.style.transition = null\r\n        this.itemsParent.style.userSelect = \"none\"\r\n    }\r\n\r\n    floorLeft(){\r\n        this.applyLeft()\r\n        this.itemsParent.style.transition = this.opts.transition\r\n        this.itemsParent.style.userSelect = null\r\n\r\n        this.items.map(item => item.classList.toggle('active', this.activeItem == item))\r\n        this.items.map(item => item.classList.toggle('visible', item.rect.left + item.rect.width > this.containerRect.left && item.rect.left < this.containerRect.left + this.containerRect.width))\r\n    }\r\n\r\n    update(){\r\n        this.updateItemsRect()\r\n        this.updateContainerSize()\r\n    }\r\n\r\n    updateItemsRect(){\r\n        this.items.map(item => item.rect = item.getBoundingClientRect())\r\n    }\r\n\r\n    updateContainerSize(){\r\n        this.containerRect = this.itemsContainer.getBoundingClientRect()\r\n        this.parentRect = this.itemsParent.getBoundingClientRect()\r\n        this.container.style.setProperty(\"--container-width\", this.containerRect.width + \"px\")\r\n        this.container.style.setProperty(\"--container-height\", this.containerRect.height + \"px\")\r\n    }\r\n\r\n    stopAutoPlay(){\r\n        if(this.autoPlayTimeout) clearTimeout(this.autoPlayTimeout)\r\n    }\r\n\r\n    autoPlay(){\r\n        this.stopAutoPlay()\r\n        this.autoPlayTimeout = setTimeout(()=> {\r\n            this.next()\r\n            this.autoPlay()\r\n        }, this.opts.autoPlay * 1000)\r\n    }\r\n\r\n    buildLoop(){\r\n        const cloneLoop = ()=>{\r\n            this.cloneItems()\r\n            this.update()\r\n            if(this.parentRect.width / 4 < window.innerWidth) cloneLoop()\r\n        }\r\n        cloneLoop()\r\n        this.setItem(this.items[this.activeIndex + this.defaultItems.length])\r\n        this.applyLeft()\r\n    }\r\n\r\n    cloneItems(){\r\n        this.defaultItems.map(item => this.addItem(item.cloneNode(true)))\r\n    }\r\n\r\n    addItem(item){\r\n        this.items.push(item)\r\n        this.itemsParent.append(item)\r\n        this.dispatchEvent(new SliderAddItem(item))\r\n    }\r\n}\r\n\r\nexport const SliderEvents = {\r\n    ChangeEvent: \"sliderChange\",\r\n    AddItemEvent: \"sliderAddItem\",\r\n}\r\n\r\nexport class SliderChangeEvent extends Event {\r\n    constructor(activeItem, activeIndex) {\r\n        super(SliderEvents.ChangeEvent)\r\n        this.item = activeItem\r\n        this.index = activeIndex\r\n    }\r\n}\r\n\r\nexport class SliderAddItem extends Event {\r\n    constructor(item){\r\n        super(SliderEvents.AddItemEvent)\r\n        this.item = item\r\n    }\r\n}","import Slider from \"./slider\";\r\n\r\nwindow.Slider = Slider"],"names":["Element","container","opts","selector","tagName","attributes","parent","element","key","el","MathUtils","v","min","max","a","b","t","Slider","item","eventName","callback","e","SliderEvents","i","mouseMove","center","left","right","dist","lastElement","firstElement","index","offset","centers","nearest","oldIndex","SliderChangeEvent","cloneLoop","SliderAddItem","activeItem","activeIndex"],"mappings":"ssBAAe,MAAMA,UAAgB,WAAY,CAC7C,YAAYC,EAAWC,EAAK,GAAI,CAC5B,MAAO,EACJ,CAAAD,EAAU,KAAK,YAAY,IAAI,IAClC,KAAK,UAAYA,EACjB,KAAK,UAAU,KAAK,YAAY,IAAI,EAAI,KACxC,KAAK,KAAOC,EAEZ,KAAK,MAAO,EACZ,KAAK,KAAM,EACX,KAAK,MAAO,EACf,CAED,OAAO,CAAE,CACT,MAAM,CAAE,CACR,OAAO,CAAE,CAET,OAAOC,EAAS,CACZ,OAAO,KAAK,UAAU,cAAcA,CAAQ,CAC/C,CACD,UAAUA,EAAS,CACf,OAAO,MAAM,KAAK,KAAK,UAAU,iBAAiBA,CAAQ,CAAC,CAC9D,CACD,OAAOC,EAAQ,MAAOC,EAAW,CAAE,EAAEC,EAAO,KAAK,CAC7C,MAAMC,EAAU,SAAS,cAAcH,CAAO,EAC9C,QAAQI,KAAOH,EAAYE,EAAQC,CAAG,EAAIH,EAAWG,CAAG,EACxD,OAAGF,GAAQA,EAAO,OAAOC,CAAO,EACzBA,CACV,CACD,OAAO,KAAKJ,EAAUD,EAAK,GAAG,CAC1B,SAAS,iBAAiBC,CAAQ,EAAE,QAASM,GAAM,IAAI,KAAKA,EAAIP,CAAI,CAAC,CACxE,CACL,CChCe,MAAMQ,CAAU,CAC3B,OAAO,MAAMC,EAAGC,EAAI,EAAGC,EAAI,EAAE,CACzB,OAAO,KAAK,IAAIA,EAAK,KAAK,IAAID,EAAKD,CAAC,CAAC,CACxC,CACD,OAAO,KAAKG,EAAGC,EAAGC,EAAE,CAChB,OAAAA,EAAI,KAAK,MAAMA,CAAC,GACR,EAAEA,GAAKF,EAAIE,EAAID,CAC1B,CACD,OAAO,YAAYH,EAAKC,EAAI,CACxB,OAAO,KAAK,KAAKD,EAAKC,EAAK,KAAK,QAAQ,CAC3C,CACL,CCPe,MAAMI,UAAejB,CAAQ,CAExC,YAAYC,EAAWC,EAAK,GAAI,CAC5B,MAAMD,EAAW,OAAO,OAAO,CAC3B,eAAgB,KAChB,YAAa,KACb,MAAO,KACP,WAAY,+CACZ,MAAO,GACP,MAAO,GACP,iBAAkB,IAClB,gBAAiB,GAEjB,KAAM,GACN,WAAY,GACZ,SAAU,GACV,MAAO,EAEnB,EAAWC,CAAI,CAAC,EACR,KAAK,MAAO,CACf,CAED,OAAQ,CACJ,KAAK,eAAiB,KAAK,KAAK,eAAiB,KAAK,OAAO,KAAK,KAAK,cAAc,EAAI,KAAK,UAC9F,KAAK,YAAc,KAAK,KAAK,YAAc,KAAK,OAAO,KAAK,KAAK,WAAW,EAAI,KAAK,eAAe,SAAS,CAAC,EAC9G,KAAK,MAAQ,KAAK,KAAK,MAAQ,KAAK,UAAU,KAAK,KAAK,KAAK,EAAI,MAAM,KAAK,KAAK,YAAY,QAAQ,EAErG,KAAK,YAAc,KACnB,KAAK,WAAa,EAElB,KAAK,aAAe,GACpB,KAAK,aAAe,OAAO,WAAa,EAExC,KAAK,eAAe,UAAU,IAAI,QAAQ,EAC1C,KAAK,MAAM,IAAIgB,GAAQA,EAAK,UAAU,IAAI,aAAa,CAAC,EAExD,KAAK,OAAS,EACd,KAAK,aAAe,MAAM,KAAK,KAAK,KAAK,EAEzC,KAAK,OAAQ,EACb,KAAK,QAAU,KAAK,WAAW,KAAO,KAAK,cAAc,KAEzD,KAAK,kBAAoB,KAAK,OAAO,SAAS,GAAK,KAAK,MAAM,CAAC,EAC/D,KAAK,YAAa,EAClB,KAAK,QAAQ,KAAK,iBAAiB,EACnC,KAAK,UAAW,EAEb,KAAK,KAAK,MAAM,KAAK,UAAW,EAEhC,KAAK,KAAK,UAAU,KAAK,SAAU,CACzC,CAED,IAAI,YAAY,CACZ,OAAO,KAAK,aAAa,MAC5B,CAED,IAAI,QAAQ,CACR,OAAO,KAAK,WAAa,KAAK,KAAK,eACtC,CAED,IAAI,YAAY,CACZ,OAAO,KAAK,MAAQ,KAAK,IAAI,KAAK,MAAQ,KAAK,WAAW,EAAI,CACjE,CAED,MAAO,CACA,KAAK,KAAK,OAAO,KAAK,UAAW,EACjC,KAAK,KAAK,OAAO,KAAK,UAAW,EAEpC,KAAK,gBAAkB,OAAO,WAC9B,OAAO,iBAAiB,SAAU,IAAK,CAChC,KAAK,iBAAmB,OAAO,YAAY,KAAK,oBAAqB,EACxE,KAAK,gBAAkB,OAAO,UAC1C,CAAS,CACJ,CAED,UAAUC,EAAWC,EAAS,CAC1B,KAAK,MAAM,IAAKF,GAASA,EAAK,iBAAiBC,EAAYE,GAAKD,EAASC,EAAG,KAAK,MAAM,QAAQH,CAAI,CAAC,CAAC,CAAC,EACtG,KAAK,iBAAiBI,EAAa,aAAeJ,GAAQ,CACtDA,EAAK,iBAAiBC,EAAYE,GAAKD,EAASC,EAAG,KAAK,MAAM,QAAQH,CAAI,CAAC,CAAC,CACxF,CAAS,CACJ,CAED,WAAW,CACP,KAAK,UAAU,YAAa,CAAC,EAAGK,IAAM,CAClC,KAAK,MAAQ,GACb,KAAK,cAAgB,YAAY,IAAK,EACtC,KAAK,cAAgB,KAAK,MAAMA,CAAC,EAEjC,KAAK,YAAa,EAClB,OAAO,iBAAiB,YAAaC,CAAS,CAC1D,CAAS,EAED,KAAK,UAAU,QAAU,GAAI,CACtB,KAAK,OAAO,EAAE,eAAgB,CAC7C,CAAS,EAED,MAAMA,EAAa,GAAM,CACrB,KAAK,MAAQ,GAET,KAAK,QACL,KAAK,YAAc,EAAE,QACrB,KAAK,MAAQ,KAAK,aAGtB,KAAK,YAAc,KAAK,MAAQ,EAAE,QAClC,KAAK,UAAW,EAChB,KAAK,MAAQ,EAAE,OAClB,EAED,KAAK,eAAe,iBAAiB,UAAW,IAAM,CAC/C,CAAC,KAAK,OAAS,CAAE,KAAK,gBAErB,KAAK,OAML,KAAK,KAAM,GAJX,KAAK,QAAQ,KAAK,aAAa,EAC/B,KAAK,UAAW,GAKpB,KAAK,cAAgB,KACrB,KAAK,MAAQ,KACb,OAAO,oBAAoB,YAAaA,CAAS,EAC7D,CAAS,EAED,KAAK,eAAe,iBAAiB,aAAc,IAAI,CACnD,KAAK,aAAc,CAC/B,CAAS,EAED,KAAK,eAAe,iBAAiB,aAAc,IAAI,CAChD,KAAK,KAAK,UAAU,KAAK,SAAU,EAClC,KAAK,QACT,KAAK,KAAM,EACX,KAAK,cAAgB,KACrB,KAAK,MAAQ,KACb,OAAO,oBAAoB,YAAaA,CAAS,EAC7D,CAAS,CACJ,CAED,OAAO,CACC,KAAK,gBACL,KAAK,eAAiB,KAAK,MAAM,CAAC,EAAE,sBAAqB,EAAG,KACzD,KAAK,IAAI,KAAK,eAAiB,KAAK,YAAY,EAAI,EAC/C,KAAK,eACL,KAAK,iBAAkB,EACvB,KAAK,UAAW,EAChB,KAAK,aAAe,GAEjB,KAAK,KAAK,MACT,KAAK,YAAa,GAK1B,KAAK,aAAe,GAExB,KAAK,aAAe,KAAK,gBAG7B,sBAAsB,KAAK,MAAM,KAAK,IAAI,CAAC,CAC9C,CAED,aAAa,CACT,KAAK,YAAa,EAClB,KAAK,QAAQ,KAAK,UAAU,EAC5B,KAAK,UAAW,EAChB,KAAK,eAAiB,KAAK,MAAM,CAAC,EAAE,sBAAqB,EAAG,KAC5D,KAAK,OAAQ,EAEb,MAAMC,EAAS,KAAK,cAAc,KAAO,KAAK,cAAc,MAAQ,EAC9DC,EAAOD,EAAS,KAAK,WAAW,KAChCE,EAAQ,KAAK,WAAW,KAAO,KAAK,WAAW,MAAQF,EAEvDG,EAAO,KAAK,IAAIF,EAAOC,CAAK,EAElC,GAAGD,EAAOC,EAAM,CACZ,MAAME,EAAc,KAAK,MAAM,KAAK,MAAM,OAAO,CAAC,EACzBA,EAAY,sBAAqB,EAAG,MACvCD,EAAO,IACzB,KAAK,YAAY,QAAQC,CAAW,EACpC,KAAK,MAAQ,MAAM,KAAK,KAAK,YAAY,QAAQ,EAEjD,KAAK,YAAa,EAEzB,KACI,CACD,MAAMC,EAAe,KAAK,MAAM,CAAC,EACPA,EAAa,sBAAqB,EAAG,MACxCF,EAAO,IAC1B,KAAK,YAAY,OAAOE,CAAY,EACpC,KAAK,MAAQ,MAAM,KAAK,KAAK,YAAY,QAAQ,EAEjD,KAAK,YAAa,EAEzB,CAEJ,CAED,WAAW,CACP,KAAK,UAAU,aAAeT,GAAM,CAChC,KAAK,YAAcA,EAAE,QAAQ,CAAC,EAAE,QAChC,KAAK,MAAQ,KAAK,YAClB,KAAK,YAAa,CAC9B,CAAS,EACD,KAAK,eAAe,iBAAiB,YAAcA,GAAM,CACrD,KAAK,YAAc,KAAK,MAAQA,EAAE,QAAQ,CAAC,EAAE,QAC7C,KAAK,UAAW,EAChB,KAAK,MAAQA,EAAE,QAAQ,CAAC,EAAE,OACtC,EAAW,CACC,QAAS,EACrB,CAAS,EACD,KAAK,eAAe,iBAAiB,WAAY,IAAM,CACnD,KAAK,KAAM,CACvB,CAAS,CACJ,CAED,SAASU,EAAM,CACX,KAAK,UAAUA,CAAK,EACpB,KAAK,UAAW,CACnB,CAED,MAAM,CACF,KAAK,UAAU,KAAK,YAAY,CAAC,EACjC,KAAK,UAAW,CACnB,CAED,MAAM,CACF,KAAK,UAAU,KAAK,YAAY,CAAC,EACjC,KAAK,UAAW,CACnB,CAED,KAAKC,EAAS,EAAG,CACb,KAAK,OAASA,EACd,KAAK,cAAgB,KAAK,eAAe,sBAAuB,EAChE,KAAK,iBAAkB,EACvB,KAAK,UAAW,CACnB,CAED,kBAAmB,CACf,GAAG,KAAK,KAAK,OAAS,CAAC,KAAK,OAAQ,OACpC,MAAMC,EAAU,KAAK,MAAM,IAAIf,IAC3BA,EAAK,KAAOA,EAAK,sBAAuB,EACjCA,EAAK,KAAK,KAAOA,EAAK,KAAK,MAAQ,EAAI,KAAK,cAAc,MAAQ,EAAI,KAAK,cAAc,KACnG,EAEKgB,EADgB,MAAM,KAAKD,CAAO,EACV,KAAK,CAACnB,EAAGC,IAAM,KAAK,IAAID,CAAC,EAAI,KAAK,IAAIC,CAAC,CAAC,EAAE,CAAC,EACnEgB,EAAQE,EAAQ,QAAQC,CAAO,EACrC,KAAK,UAAUH,EAAQ,KAAK,MAAM,CACrC,CAED,QAAQb,EAAK,CACN,KAAK,aAAeA,GACvB,KAAK,UAAU,KAAK,MAAM,QAAQA,CAAI,CAAC,CAC1C,CAED,UAAUa,EAAM,CACZ,MAAMI,EAAW,KAAK,YACtB,KAAK,YAAczB,EAAU,MAAMqB,EAAO,EAAG,KAAK,MAAM,OAAS,CAAC,EAClE,KAAK,WAAa,KAAK,MAAM,KAAK,WAAW,EAC7C,KAAK,WAAW,KAAO,KAAK,WAAW,sBAAuB,EAC9D,KAAK,WACD,KAAK,WAAW,KAAK,KACnB,KAAK,WAAW,KAAK,MAAQ,EAC7B,KAAK,cAAc,MAAQ,EAC3B,KAAK,cAAc,KACnB,KAAK,WAER,KAAK,KAAK,QACT,KAAK,WAAarB,EAAU,MAAM,KAAK,WAAY,EAAG,KAAK,WAAW,MAAQ,KAAK,cAAc,MAAQ,KAAK,QAAU,CAAC,GAE1H,KAAK,KAAK,aAAY,KAAK,eAAe,MAAM,OAAS,KAAK,WAAW,sBAAuB,EAAC,OAAS,MAE1G,KAAK,cAAgByB,GAAU,KAAK,cAAc,IAAIC,EAAkB,KAAK,WAAY,KAAK,WAAW,CAAC,CAChH,CAED,WAAW,CACP,KAAK,YAAY,MAAM,UAAY,cAAc,CAAC,KAAK,UAAU,KACpE,CAED,aAAa,CACT,KAAK,YAAY,MAAM,WAAa,KACpC,KAAK,YAAY,MAAM,WAAa,MACvC,CAED,WAAW,CACP,KAAK,UAAW,EAChB,KAAK,YAAY,MAAM,WAAa,KAAK,KAAK,WAC9C,KAAK,YAAY,MAAM,WAAa,KAEpC,KAAK,MAAM,IAAIlB,GAAQA,EAAK,UAAU,OAAO,SAAU,KAAK,YAAcA,CAAI,CAAC,EAC/E,KAAK,MAAM,IAAIA,GAAQA,EAAK,UAAU,OAAO,UAAWA,EAAK,KAAK,KAAOA,EAAK,KAAK,MAAQ,KAAK,cAAc,MAAQA,EAAK,KAAK,KAAO,KAAK,cAAc,KAAO,KAAK,cAAc,KAAK,CAAC,CAC7L,CAED,QAAQ,CACJ,KAAK,gBAAiB,EACtB,KAAK,oBAAqB,CAC7B,CAED,iBAAiB,CACb,KAAK,MAAM,IAAIA,GAAQA,EAAK,KAAOA,EAAK,uBAAuB,CAClE,CAED,qBAAqB,CACjB,KAAK,cAAgB,KAAK,eAAe,sBAAuB,EAChE,KAAK,WAAa,KAAK,YAAY,sBAAuB,EAC1D,KAAK,UAAU,MAAM,YAAY,oBAAqB,KAAK,cAAc,MAAQ,IAAI,EACrF,KAAK,UAAU,MAAM,YAAY,qBAAsB,KAAK,cAAc,OAAS,IAAI,CAC1F,CAED,cAAc,CACP,KAAK,iBAAiB,aAAa,KAAK,eAAe,CAC7D,CAED,UAAU,CACN,KAAK,aAAc,EACnB,KAAK,gBAAkB,WAAW,IAAK,CACnC,KAAK,KAAM,EACX,KAAK,SAAU,CAClB,EAAE,KAAK,KAAK,SAAW,GAAI,CAC/B,CAED,WAAW,CACP,MAAMmB,EAAY,IAAI,CAClB,KAAK,WAAY,EACjB,KAAK,OAAQ,EACV,KAAK,WAAW,MAAQ,EAAI,OAAO,YAAYA,EAAW,CAChE,EACDA,EAAW,EACX,KAAK,QAAQ,KAAK,MAAM,KAAK,YAAc,KAAK,aAAa,MAAM,CAAC,EACpE,KAAK,UAAW,CACnB,CAED,YAAY,CACR,KAAK,aAAa,IAAInB,GAAQ,KAAK,QAAQA,EAAK,UAAU,EAAI,CAAC,CAAC,CACnE,CAED,QAAQA,EAAK,CACT,KAAK,MAAM,KAAKA,CAAI,EACpB,KAAK,YAAY,OAAOA,CAAI,EAC5B,KAAK,cAAc,IAAIoB,EAAcpB,CAAI,CAAC,CAC7C,CACL,CAEO,MAAMI,EAAe,CACxB,YAAa,eACb,aAAc,eAClB,EAEO,MAAMc,UAA0B,KAAM,CACzC,YAAYG,EAAYC,EAAa,CACjC,MAAMlB,EAAa,WAAW,EAC9B,KAAK,KAAOiB,EACZ,KAAK,MAAQC,CAChB,CACL,CAEO,MAAMF,UAAsB,KAAM,CACrC,YAAYpB,EAAK,CACb,MAAMI,EAAa,YAAY,EAC/B,KAAK,KAAOJ,CACf,CACL,CC3WA,OAAO,OAASD"}